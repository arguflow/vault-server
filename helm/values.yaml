postgres:
  # Enables Postgres via the subchart
  enabled: true
  # Installs cloudnative-pg operator
  installCrds: true
  # Pulls from secret if postgres.enabled = true
  # dbURI: "postgres://postgres:password@postgres.default.svc.cluster.local:5432/trieve"
  # This requires installing cloud-native-pg operator https://cloudnative-pg.io/documentation/1.24/installation_upgrade/
  clusterSpec:
    # CloudNativePg template spec
    instances: 1
    storage:
      size: 10Gi

keycloak:
  ## WARNING THIS IS NOT PRODUCTION SAFE.
  ## THIS USeS A DEFAULT REALM EXPORT.
  ## YOU MUST MAKE A NEW keycloak realm
  ## TO HARDEN THIS.

  # Install keycloak subchart
  enabled: false
  # Installs the keycloak crd / operator
  # installCrds: true
  #
  # ingress:
  #   host: auth.localtrieve.com
  #   ingressClassName: nginx
  #   annotations:
  #     cert-manager.io/cluster-issuer: "letsencrypt"
  #     nginx.ingress.kubernetes.io/ssl-redirect: "true"
  #   tls:
  #     - hosts:
  #         - auth.localtrieve.com
  #       secretName: auth-localtrieve-com

clickhouse:
  enabled: true
  installCrds: true

  connection:
    clickhouseDB: default
    clickhouseUser: default
    clickhousePassword: clickhouse
    clickhouseUrl: http://clickhouse-trieve-local-trieve:8123

  clickhouseSpec:
    ## A ClickhouseInstallation template spec
    configuration:
      users:
        default/password: clickhouse
        # to allow access outside from kubernetes
        default/networks/ip:
          - 0.0.0.0/0
      clusters:
        - name: cluster1
          templates:
            podTemplate: clickhouse-pod-template
          layout:
            shardsCount: 1
            replicasCount: 1
    templates:
      podTemplates:
        - name: clickhouse-pod-template
          spec:
            containers:
              - name: clickhouse
                image: trieve/clickhouse:latest
                digest: sha256:324f541975c43e96b5df6ede74632102d89172b703960bbf01f1842ccf48d240
                volumeMounts:
                  - name: data-storage-vc
                    mountPath: /var/lib/clickhouse
                  - name: log-storage-vc
                    mountPath: /var/log/clickhouse-server
                env:
                  - name: CLICKHOUSE_ADMIN_PASSWORD
                    value: clickhouse

minio:
  enabled: false

qdrant:
  enabled: true
  url: http://trieve-local-qdrant:6334

  apiKey: "qdrant-api-key"
  # Qdrant values.yaml spec
  replicaCount: 3
  livenessProbe:
    enabled: false
  # HIGHLY RECOMMENDED QDRANT NODES go on a dedicated node
  # tolerations: 
  # - key: "qdrant-node"
  #   operator: "Exists"
  #   effect: "NoSchedule"
  metrics:
    serviceMonitor:
      enabled: false
  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1
  requests:
    cpu: 1
    memory: 10Gi

redis:
  enabled: true
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
  auth:
    password: "password"
  master:
    disableCommands: []
    persistence:
      enabled: false
    pdb:
      create: false
    resources:
      limits:
        memory: 5Gi
  replica:
    replicaCount: 0

containers:
  server:
    tag: sha-2b6d5eb
    resources: {}
  ingest:
    tag: sha-2b6d5eb
    resources: {}
  update_worker:
    tag: sha-2b6d5eb
    resources: {}
  batch_etl_worker:
    tag: sha-2b6d5eb
    resources: {}
  file_worker:
    tag: sha-2b6d5eb
    resources: {}
  delete_worker:
    tag: sha-2b6d5eb
    resources: {}
  group_worker:
    tag: sha-2b6d5eb
    resources: {}
  sync_qdrant:
    tag: sha-2b6d5eb
    resources: {}
  bktree_worker:
    tag: sha-2b6d5eb
    resources: {}
  word_worker:
    tag: sha-2b6d5eb
    resources: {}
  word_id_cronjob:
    tag: sha-2b6d5eb
    resources: {}
  crawl_worker:
    tag: sha-2b6d5eb
    resources: {}
  ditto_feed_cronjob:
    tag: sha-2b6d5eb
    resources: {}
  csv_jsonl_worker:
    tag: sha-2b6d5eb
    resources: {}
  pagefind_worker:
    tag: sha-2b6d5eb
    resources: {}
  video_worker:
    tag: sha-2b6d5eb
    resources: {}
  clone_qdrant:
    tag: sha-2b6d5eb
    resources: {}
  search:
    tag: sha-62f367a
    resources: {}
  chat:
    tag: sha-62f367a
    resources: {}
  dashboard:
    tag: sha-62f367a
    resources: {}
  clustering_cron:
    tag: latest
  clickhouse_collapse:
    tag: latest
domains:
  dashboard:
    host: dashboard.yourdomain.com
    # TODO modify as needed
    class: nginx
    # annotations:
    #   cert-manager.io/cluster-issuer: "letsencrypt"
    #   nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # tls:
    #   - hosts:
    #       - dashboard.yourdomain.com
    #     secretName: dashboard-ansear-ai
  server:
    host: api.yourdomain.com
    class: nginx
    # annotations:
    #   cert-manager.io/cluster-issuer: "letsencrypt"
    #   nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # tls:
    #   - hosts:
    #       - dashboard.yourdomain.com
    #     secretName: dashboard-ansear-ai
  search:
    host: search.yourdomain.com
    class: nginx
    # annotations:
    #   cert-manager.io/cluster-issuer: "letsencrypt"
    #   nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # tls:
    #   - hosts:
    #       - dashboard.yourdomain.com
    #     secretName: dashboard-ansear-ai
  chat:
    host: chat.yourdomain.com
    class: nginx
    # annotations:
    #   cert-manager.io/cluster-issuer: "letsencrypt"
    #   nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # tls:
    #   - hosts:
    #       - dashboard.yourdomain.com
    #     secretName: dashboard-ansear-ai
config:
  vite:
    apiHost: http://api.yourdomain.com/api
    searchUiUrl: http://search.yourdomain.com
    chatUiUrl: http://chat.yourdomain.com
    sentryChatDsn: ""
    dashboardUrl: http://dashboard.yourdomain.com
  redis:
    connections: 3
    # Will be auto set from subchart
    # uri: "redis://:@redis:6379"
  qdrant:
    quantizeVectors: false  # If set to true will binary quantize
    replicationFactor: 2
    shardCount: 12
    vectorSizes:
      - 768
      - 1536
      - 1024
      - 3072
  delete_worker:
    batch_size: 10000
  trieve:
    batch_limit: 120
    bm25Active: true
    unlimited: true
    cookieSecure: false
    baseServerUrl: http://api.yourdomain.com
    embeddingServerOrigin: http://embedding-jina.default.svc.cluster.local
    sparseServerQueryOrigin: http://embedding-splade-query.default.svc.cluster.local
    sparseServerDocOrigin: http://embedding-splade-doc.default.svc.cluster.local
    embeddingServerOriginBGEM3: http://embedding-m3.default.svc.cluster.local
    embeddingServerOriginJinaCode: http://api.jina.ai/v1
    jinaCodeApiKey: jina_************************************************************
    rerankerServerOrigin: http://embedding-reranker.default.svc.cluster.local
    salt: tbbqfnygvfirellhzzl
    secretKey: lkjadsf2349asdlfkj2334209ualkfsdlfkj1023u19312l3kj12l3kjsaf0d9u90823l1kj3209u34h
    adminApiKey: "ad91lkjad190l"
    anthropicAPIKey: ""
    subtraceToken: ""
  oidc:
    # OIDC also will need to allow the following redirect urls'
    # - dashboard.yourdomain.com/*
    # - chat.yourdomain.com/*
    # - search.yourdomain.com/*
    # TODO replace with Okteta client secret
    clientSecret: ""
    # TODO replace with Okteta client id
    clientId: ""
    # TODO Replace with Okteta issuer url
    issuerUrl: "http://trieve-keycloak-service:8080/realms/trieve"
    # TODO Replace with Okteta redirect url
    authRedirectUrl: "http://trieve-keycloak-service:8080/realms/trieve/protocol/openid-connect/auth"
  smtp:
    # TODO fill with email creds, only impacts email invites to a new dataset
    relay: ""
    username: ""
    password: ""
    emailAddress: ""
  llm:
    # optional: add openrouter.ai api key
    apiKey: ""
  openai:
    # optional: add openai api key
    apiKey: "sk-************************************************************"
    baseUrl: https://api.openai.com/v1
  s3:
    # TODO update with your s3 credentials
    endpoint: ""
    accessKey: ""
    secretKey: ""
    bucket: ""
  stripe:
    secret: ""
    webhookSecret: ""
embeddings:
  ## TODO need T4 GPU's for embedding servers to be fast
  ## Can swap useGpu = false for faster testing
  - name: jina
    revision: main
    model: jinaai/jina-embeddings-v2-base-en
    tag: 
    useGpu: true
    args: []
  - name: splade-doc
    model: naver/efficient-splade-VI-BT-large-doc
    tag: 
    revision: main
    useGpu: true
    args: ["--pooling", "splade"]
  - name: splade-query
    model: naver/efficient-splade-VI-BT-large-query
    tag: 
    revision: main
    useGpu: true
    args: ["--pooling", "splade"]
  - name: m3
    model: BAAI/bge-m3
    tag: 
    revision: main
    useGpu: true
    args: []
  - name: reranker
    model: BAAI/bge-reranker-large
    tag: 
    revision: refs/pr/4
    useGpu: true
    args: []
